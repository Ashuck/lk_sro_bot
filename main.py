import telebot
import requests
from datetime import datetime

from keyboards import HELO_BOARD
from telebot.types import Message, CallbackQuery
from settings import TOKEN, SOURCES


tasks = {}

def get_orgs(url, key):

    data = {
        'filters':  {
            "inn": key,
            'member_status': 1, 
            'sro_enabled': True
        }, 
        'page': 1, 
        'pageCount': "100", 
        'sortBy': {}, 
        'searchString': key
    }
    
    try:
        result = requests.post(url, json=data, timeout=5)
        return result.json()["data"]["data"]
    except:
        return []


def process_results(data):
    orgs = {}
    result = ''
    for org in data:
        print(orgs)
        if org["inn"] not in orgs:
            orgs[org["inn"]] = [org]
        else:
            orgs[org["inn"]].append(org)
    
    for inn in orgs:
        print(orgs[inn])
        result += "\n\n"
        # for item in orgs[inn]:
        #     item['last_updated'] = datetime.strptime(
        #         item['last_updated_at_date_time_string'],
        #         "%d.%m.%Y %H:%M:%S"
        #     )
        # orgs[inn].sort(key=lambda x: x['last_updated'])
        result += orgs[inn][0]['short_description']
        result += "\n–ò–ù–ù: " + orgs[inn][0]['inn']
        result += "\n–û–ì–†–ù: " + orgs[inn][0]['ogrnip']
        result += "\n" + orgs[inn][0]['director']
        result += "\n–ú–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ: " + orgs[inn][0]['region_number']['title']
        result += "\n–ê–∫—Ç–∏–≤–Ω–æ–µ —á–ª–µ–Ω—Å—Ç–≤–æ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –°–†–û:"
        for item in orgs[inn]:
            sro = item['sro']['full_description']
            result += f"\n[üëâ {sro}]({item['detail_url']})"
    return result


def serch_org(search_string):
    results = []
    for source in SOURCES:
        tmp = get_orgs(source["search_url"], search_string)
        for item in tmp:
            item['detail_url'] = source["detail_url_page"].format(item["id"])
        results += tmp
            

    result = process_results(results)
    print(result)
    if result:
        text = "–ü–æ –¥–∞–Ω–Ω–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é –Ω–∞–π–¥–µ–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ:" + result
    else:
        text = "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å"
    return text
    

def get_detail(url_teplate, org_id):
    url = url_teplate.format(org_id)
    result = requests.post(url)
    return result.json()


if __name__ == "__main__":
    bot = telebot.TeleBot(TOKEN, parse_mode="MARKDOWN")


    @bot.message_handler(commands=['start'])
    def start_message(message: Message):
        text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"
        text += "\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–∏—á–Ω—ã–º –∫–∞–±–∏–Ω–µ—Ç–æ–º ..."
        
        bot.send_message(
            chat_id=message.chat.id, 
            text=text,
            reply_markup=HELO_BOARD
        )
    

    @bot.message_handler(content_types='text')
    def process_text(message:Message): 
        state = tasks.get(message.chat.id)
        print(state)
        if message.text == "–ü–æ–∏—Å–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏":
            tasks[message.chat.id] = {"state": "search"}
            text = "\n–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö —á–ª–µ–Ω–∞—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –°–†–û"
            text += "\n\n–ü–æ–∏—Å–∫ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ –ò–ù–ù"
            text += "\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∏—Å–∫ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –ø–æ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É"

        elif state and state["state"] == "search":
            try:
                text = serch_org(message.text)
            except:
                text = "–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"
            tasks.__delitem__(message.chat.id)


        elif message.text == "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç":
            text = "–î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
        
        else:
            text = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"

        bot.send_message(
            chat_id=message.chat.id, 
            text=text
        )

    bot.infinity_polling()